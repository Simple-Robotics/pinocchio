//
// Copyright (c) 2025 INRIA
//

#ifndef __pinocchio_math_details_matrix_inversion_9x9_hpp__
#define __pinocchio_math_details_matrix_inversion_9x9_hpp__

#include "pinocchio/math/matrix.hpp"

namespace pinocchio
{
  namespace internal
  {
    template<>
    struct MatrixInversionCodeGeneratedImpl<9>
    {
      template<typename M1, typename M2>
      static void
      run(const Eigen::MatrixBase<M1> & matrix, const Eigen::MatrixBase<M2> & matrix_inverse_)
      {
        typedef typename M1::Scalar Scalar;

        assert(is_symmetric(matrix));

        const auto & input_vec = matrix.reshaped();
        auto & matrix_inverse = matrix_inverse_.const_cast_derived();
        auto output_vec = matrix_inverse.reshaped();

        Scalar a00, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11;
        Scalar a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23;
        Scalar a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35;
        Scalar a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47;
        Scalar a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59;
        Scalar a60, a61, a62, a63, a64, a65, a66, a67, a68, a69, a70, a71;
        Scalar a72, a73, a74, a75, a76, a77, a78, a79, a80, a81;
        a00 = input_vec[0];
        a01 = input_vec[10];
        a02 = input_vec[20];
        a03 = input_vec[30];
        a04 = input_vec[40];
        a05 = input_vec[50];
        a06 = input_vec[60];
        a07 = input_vec[70];
        a08 = input_vec[80];
        a09 = input_vec[79];
        a09 = (a09 / a08);
        a10 = math::square(a09);
        a10 = (a08 * a10);
        a07 = (a07 - a10);
        a10 = input_vec[69];
        a11 = input_vec[78];
        a12 = (a11 * a09);
        a10 = (a10 - a12);
        a10 = (a10 / a07);
        a12 = math::square(a10);
        a12 = (a07 * a12);
        a11 = (a11 / a08);
        a13 = math::square(a11);
        a13 = (a08 * a13);
        a12 = (a12 + a13);
        a06 = (a06 - a12);
        a12 = input_vec[59];
        a13 = input_vec[68];
        a14 = input_vec[77];
        a15 = (a14 * a09);
        a13 = (a13 - a15);
        a15 = (a13 * a10);
        a16 = (a14 * a11);
        a15 = (a15 + a16);
        a12 = (a12 - a15);
        a12 = (a12 / a06);
        a15 = math::square(a12);
        a15 = (a06 * a15);
        a13 = (a13 / a07);
        a16 = math::square(a13);
        a16 = (a07 * a16);
        a15 = (a15 + a16);
        a14 = (a14 / a08);
        a16 = math::square(a14);
        a16 = (a08 * a16);
        a15 = (a15 + a16);
        a05 = (a05 - a15);
        a15 = input_vec[49];
        a16 = input_vec[58];
        a17 = input_vec[67];
        a18 = input_vec[76];
        a19 = (a18 * a09);
        a17 = (a17 - a19);
        a19 = (a17 * a10);
        a20 = (a18 * a11);
        a19 = (a19 + a20);
        a16 = (a16 - a19);
        a19 = (a16 * a12);
        a20 = (a17 * a13);
        a19 = (a19 + a20);
        a20 = (a18 * a14);
        a19 = (a19 + a20);
        a15 = (a15 - a19);
        a15 = (a15 / a05);
        a19 = math::square(a15);
        a19 = (a05 * a19);
        a16 = (a16 / a06);
        a20 = math::square(a16);
        a20 = (a06 * a20);
        a19 = (a19 + a20);
        a17 = (a17 / a07);
        a20 = math::square(a17);
        a20 = (a07 * a20);
        a19 = (a19 + a20);
        a18 = (a18 / a08);
        a20 = math::square(a18);
        a20 = (a08 * a20);
        a19 = (a19 + a20);
        a04 = (a04 - a19);
        a19 = input_vec[39];
        a20 = input_vec[48];
        a21 = input_vec[57];
        a22 = input_vec[66];
        a23 = input_vec[75];
        a24 = (a23 * a09);
        a22 = (a22 - a24);
        a24 = (a22 * a10);
        a25 = (a23 * a11);
        a24 = (a24 + a25);
        a21 = (a21 - a24);
        a24 = (a21 * a12);
        a25 = (a22 * a13);
        a24 = (a24 + a25);
        a25 = (a23 * a14);
        a24 = (a24 + a25);
        a20 = (a20 - a24);
        a24 = (a20 * a15);
        a25 = (a21 * a16);
        a24 = (a24 + a25);
        a25 = (a22 * a17);
        a24 = (a24 + a25);
        a25 = (a23 * a18);
        a24 = (a24 + a25);
        a19 = (a19 - a24);
        a19 = (a19 / a04);
        a24 = math::square(a19);
        a24 = (a04 * a24);
        a20 = (a20 / a05);
        a25 = math::square(a20);
        a25 = (a05 * a25);
        a24 = (a24 + a25);
        a21 = (a21 / a06);
        a25 = math::square(a21);
        a25 = (a06 * a25);
        a24 = (a24 + a25);
        a22 = (a22 / a07);
        a25 = math::square(a22);
        a25 = (a07 * a25);
        a24 = (a24 + a25);
        a23 = (a23 / a08);
        a25 = math::square(a23);
        a25 = (a08 * a25);
        a24 = (a24 + a25);
        a03 = (a03 - a24);
        a24 = input_vec[29];
        a25 = input_vec[38];
        a26 = input_vec[47];
        a27 = input_vec[56];
        a28 = input_vec[65];
        a29 = input_vec[74];
        a30 = (a29 * a09);
        a28 = (a28 - a30);
        a30 = (a28 * a10);
        a31 = (a29 * a11);
        a30 = (a30 + a31);
        a27 = (a27 - a30);
        a30 = (a27 * a12);
        a31 = (a28 * a13);
        a30 = (a30 + a31);
        a31 = (a29 * a14);
        a30 = (a30 + a31);
        a26 = (a26 - a30);
        a30 = (a26 * a15);
        a31 = (a27 * a16);
        a30 = (a30 + a31);
        a31 = (a28 * a17);
        a30 = (a30 + a31);
        a31 = (a29 * a18);
        a30 = (a30 + a31);
        a25 = (a25 - a30);
        a30 = (a25 * a19);
        a31 = (a26 * a20);
        a30 = (a30 + a31);
        a31 = (a27 * a21);
        a30 = (a30 + a31);
        a31 = (a28 * a22);
        a30 = (a30 + a31);
        a31 = (a29 * a23);
        a30 = (a30 + a31);
        a24 = (a24 - a30);
        a24 = (a24 / a03);
        a30 = math::square(a24);
        a30 = (a03 * a30);
        a25 = (a25 / a04);
        a31 = math::square(a25);
        a31 = (a04 * a31);
        a30 = (a30 + a31);
        a26 = (a26 / a05);
        a31 = math::square(a26);
        a31 = (a05 * a31);
        a30 = (a30 + a31);
        a27 = (a27 / a06);
        a31 = math::square(a27);
        a31 = (a06 * a31);
        a30 = (a30 + a31);
        a28 = (a28 / a07);
        a31 = math::square(a28);
        a31 = (a07 * a31);
        a30 = (a30 + a31);
        a29 = (a29 / a08);
        a31 = math::square(a29);
        a31 = (a08 * a31);
        a30 = (a30 + a31);
        a02 = (a02 - a30);
        a30 = input_vec[19];
        a31 = input_vec[28];
        a32 = input_vec[37];
        a33 = input_vec[46];
        a34 = input_vec[55];
        a35 = input_vec[64];
        a36 = input_vec[73];
        a37 = (a36 * a09);
        a35 = (a35 - a37);
        a37 = (a35 * a10);
        a38 = (a36 * a11);
        a37 = (a37 + a38);
        a34 = (a34 - a37);
        a37 = (a34 * a12);
        a38 = (a35 * a13);
        a37 = (a37 + a38);
        a38 = (a36 * a14);
        a37 = (a37 + a38);
        a33 = (a33 - a37);
        a37 = (a33 * a15);
        a38 = (a34 * a16);
        a37 = (a37 + a38);
        a38 = (a35 * a17);
        a37 = (a37 + a38);
        a38 = (a36 * a18);
        a37 = (a37 + a38);
        a32 = (a32 - a37);
        a37 = (a32 * a19);
        a38 = (a33 * a20);
        a37 = (a37 + a38);
        a38 = (a34 * a21);
        a37 = (a37 + a38);
        a38 = (a35 * a22);
        a37 = (a37 + a38);
        a38 = (a36 * a23);
        a37 = (a37 + a38);
        a31 = (a31 - a37);
        a37 = (a31 * a24);
        a38 = (a32 * a25);
        a37 = (a37 + a38);
        a38 = (a33 * a26);
        a37 = (a37 + a38);
        a38 = (a34 * a27);
        a37 = (a37 + a38);
        a38 = (a35 * a28);
        a37 = (a37 + a38);
        a38 = (a36 * a29);
        a37 = (a37 + a38);
        a30 = (a30 - a37);
        a30 = (a30 / a02);
        a37 = math::square(a30);
        a37 = (a02 * a37);
        a31 = (a31 / a03);
        a38 = math::square(a31);
        a38 = (a03 * a38);
        a37 = (a37 + a38);
        a32 = (a32 / a04);
        a38 = math::square(a32);
        a38 = (a04 * a38);
        a37 = (a37 + a38);
        a33 = (a33 / a05);
        a38 = math::square(a33);
        a38 = (a05 * a38);
        a37 = (a37 + a38);
        a34 = (a34 / a06);
        a38 = math::square(a34);
        a38 = (a06 * a38);
        a37 = (a37 + a38);
        a35 = (a35 / a07);
        a38 = math::square(a35);
        a38 = (a07 * a38);
        a37 = (a37 + a38);
        a36 = (a36 / a08);
        a38 = math::square(a36);
        a38 = (a08 * a38);
        a37 = (a37 + a38);
        a01 = (a01 - a37);
        a37 = input_vec[9];
        a38 = input_vec[18];
        a39 = input_vec[27];
        a40 = input_vec[36];
        a41 = input_vec[45];
        a42 = input_vec[54];
        a43 = input_vec[63];
        a44 = input_vec[72];
        a45 = (a44 * a09);
        a43 = (a43 - a45);
        a45 = (a43 * a10);
        a46 = (a44 * a11);
        a45 = (a45 + a46);
        a42 = (a42 - a45);
        a45 = (a42 * a12);
        a46 = (a43 * a13);
        a45 = (a45 + a46);
        a46 = (a44 * a14);
        a45 = (a45 + a46);
        a41 = (a41 - a45);
        a45 = (a41 * a15);
        a46 = (a42 * a16);
        a45 = (a45 + a46);
        a46 = (a43 * a17);
        a45 = (a45 + a46);
        a46 = (a44 * a18);
        a45 = (a45 + a46);
        a40 = (a40 - a45);
        a45 = (a40 * a19);
        a46 = (a41 * a20);
        a45 = (a45 + a46);
        a46 = (a42 * a21);
        a45 = (a45 + a46);
        a46 = (a43 * a22);
        a45 = (a45 + a46);
        a46 = (a44 * a23);
        a45 = (a45 + a46);
        a39 = (a39 - a45);
        a45 = (a39 * a24);
        a46 = (a40 * a25);
        a45 = (a45 + a46);
        a46 = (a41 * a26);
        a45 = (a45 + a46);
        a46 = (a42 * a27);
        a45 = (a45 + a46);
        a46 = (a43 * a28);
        a45 = (a45 + a46);
        a46 = (a44 * a29);
        a45 = (a45 + a46);
        a38 = (a38 - a45);
        a45 = (a38 * a30);
        a46 = (a39 * a31);
        a45 = (a45 + a46);
        a46 = (a40 * a32);
        a45 = (a45 + a46);
        a46 = (a41 * a33);
        a45 = (a45 + a46);
        a46 = (a42 * a34);
        a45 = (a45 + a46);
        a46 = (a43 * a35);
        a45 = (a45 + a46);
        a46 = (a44 * a36);
        a45 = (a45 + a46);
        a37 = (a37 - a45);
        a37 = (a37 / a01);
        a45 = math::square(a37);
        a45 = (a01 * a45);
        a38 = (a38 / a02);
        a46 = math::square(a38);
        a46 = (a02 * a46);
        a45 = (a45 + a46);
        a39 = (a39 / a03);
        a46 = math::square(a39);
        a46 = (a03 * a46);
        a45 = (a45 + a46);
        a40 = (a40 / a04);
        a46 = math::square(a40);
        a46 = (a04 * a46);
        a45 = (a45 + a46);
        a41 = (a41 / a05);
        a46 = math::square(a41);
        a46 = (a05 * a46);
        a45 = (a45 + a46);
        a42 = (a42 / a06);
        a46 = math::square(a42);
        a46 = (a06 * a46);
        a45 = (a45 + a46);
        a43 = (a43 / a07);
        a46 = math::square(a43);
        a46 = (a07 * a46);
        a45 = (a45 + a46);
        a44 = (a44 / a08);
        a46 = math::square(a44);
        a46 = (a08 * a46);
        a45 = (a45 + a46);
        a00 = (a00 - a45);
        a45 = (1. / a00);
        output_vec[0] = a45;
        a45 = (a37 / a00);
        a46 = (-a45);
        output_vec[1] = a46;
        a47 = (a37 * a30);
        a47 = (a38 - a47);
        a47 = (a47 / a00);
        a48 = (-a47);
        output_vec[2] = a48;
        a49 = (a30 * a24);
        a49 = (a31 - a49);
        a50 = (a37 * a49);
        a51 = (a38 * a24);
        a50 = (a50 + a51);
        a50 = (a39 - a50);
        a50 = (a50 / a00);
        a51 = (-a50);
        output_vec[3] = a51;
        a52 = (a24 * a19);
        a52 = (a25 - a52);
        a53 = (a30 * a52);
        a54 = (a31 * a19);
        a53 = (a53 + a54);
        a53 = (a32 - a53);
        a54 = (a37 * a53);
        a55 = (a38 * a52);
        a54 = (a54 + a55);
        a55 = (a39 * a19);
        a54 = (a54 + a55);
        a54 = (a40 - a54);
        a54 = (a54 / a00);
        a55 = (-a54);
        output_vec[4] = a55;
        a56 = (a19 * a15);
        a56 = (a20 - a56);
        a57 = (a24 * a56);
        a58 = (a25 * a15);
        a57 = (a57 + a58);
        a57 = (a26 - a57);
        a58 = (a30 * a57);
        a59 = (a31 * a56);
        a58 = (a58 + a59);
        a59 = (a32 * a15);
        a58 = (a58 + a59);
        a58 = (a33 - a58);
        a59 = (a37 * a58);
        a60 = (a38 * a57);
        a59 = (a59 + a60);
        a60 = (a39 * a56);
        a59 = (a59 + a60);
        a60 = (a40 * a15);
        a59 = (a59 + a60);
        a59 = (a41 - a59);
        a59 = (a59 / a00);
        a60 = (-a59);
        output_vec[5] = a60;
        a61 = (a15 * a12);
        a61 = (a16 - a61);
        a62 = (a19 * a61);
        a63 = (a20 * a12);
        a62 = (a62 + a63);
        a62 = (a21 - a62);
        a63 = (a24 * a62);
        a64 = (a25 * a61);
        a63 = (a63 + a64);
        a64 = (a26 * a12);
        a63 = (a63 + a64);
        a63 = (a27 - a63);
        a64 = (a30 * a63);
        a65 = (a31 * a62);
        a64 = (a64 + a65);
        a65 = (a32 * a61);
        a64 = (a64 + a65);
        a65 = (a33 * a12);
        a64 = (a64 + a65);
        a64 = (a34 - a64);
        a65 = (a37 * a64);
        a66 = (a38 * a63);
        a65 = (a65 + a66);
        a66 = (a39 * a62);
        a65 = (a65 + a66);
        a66 = (a40 * a61);
        a65 = (a65 + a66);
        a66 = (a41 * a12);
        a65 = (a65 + a66);
        a65 = (a42 - a65);
        a65 = (a65 / a00);
        a66 = (-a65);
        output_vec[6] = a66;
        a67 = (a12 * a10);
        a67 = (a13 - a67);
        a68 = (a15 * a67);
        a69 = (a16 * a10);
        a68 = (a68 + a69);
        a68 = (a17 - a68);
        a69 = (a19 * a68);
        a70 = (a20 * a67);
        a69 = (a69 + a70);
        a70 = (a21 * a10);
        a69 = (a69 + a70);
        a69 = (a22 - a69);
        a70 = (a24 * a69);
        a71 = (a25 * a68);
        a70 = (a70 + a71);
        a71 = (a26 * a67);
        a70 = (a70 + a71);
        a71 = (a27 * a10);
        a70 = (a70 + a71);
        a70 = (a28 - a70);
        a71 = (a30 * a70);
        a72 = (a31 * a69);
        a71 = (a71 + a72);
        a72 = (a32 * a68);
        a71 = (a71 + a72);
        a72 = (a33 * a67);
        a71 = (a71 + a72);
        a72 = (a34 * a10);
        a71 = (a71 + a72);
        a71 = (a35 - a71);
        a72 = (a37 * a71);
        a73 = (a38 * a70);
        a72 = (a72 + a73);
        a73 = (a39 * a69);
        a72 = (a72 + a73);
        a73 = (a40 * a68);
        a72 = (a72 + a73);
        a73 = (a41 * a67);
        a72 = (a72 + a73);
        a73 = (a42 * a10);
        a72 = (a72 + a73);
        a72 = (a43 - a72);
        a72 = (a72 / a00);
        a73 = (-a72);
        output_vec[7] = a73;
        a74 = (a10 * a09);
        a74 = (a11 - a74);
        a75 = (a12 * a74);
        a76 = (a13 * a09);
        a75 = (a75 + a76);
        a75 = (a14 - a75);
        a76 = (a15 * a75);
        a77 = (a16 * a74);
        a76 = (a76 + a77);
        a77 = (a17 * a09);
        a76 = (a76 + a77);
        a76 = (a18 - a76);
        a77 = (a19 * a76);
        a78 = (a20 * a75);
        a77 = (a77 + a78);
        a78 = (a21 * a74);
        a77 = (a77 + a78);
        a78 = (a22 * a09);
        a77 = (a77 + a78);
        a77 = (a23 - a77);
        a78 = (a24 * a77);
        a79 = (a25 * a76);
        a78 = (a78 + a79);
        a79 = (a26 * a75);
        a78 = (a78 + a79);
        a79 = (a27 * a74);
        a78 = (a78 + a79);
        a79 = (a28 * a09);
        a78 = (a78 + a79);
        a78 = (a29 - a78);
        a79 = (a30 * a78);
        a80 = (a31 * a77);
        a79 = (a79 + a80);
        a80 = (a32 * a76);
        a79 = (a79 + a80);
        a80 = (a33 * a75);
        a79 = (a79 + a80);
        a80 = (a34 * a74);
        a79 = (a79 + a80);
        a80 = (a35 * a09);
        a79 = (a79 + a80);
        a79 = (a36 - a79);
        a80 = (a37 * a79);
        a81 = (a38 * a78);
        a80 = (a80 + a81);
        a81 = (a39 * a77);
        a80 = (a80 + a81);
        a81 = (a40 * a76);
        a80 = (a80 + a81);
        a81 = (a41 * a75);
        a80 = (a80 + a81);
        a81 = (a42 * a74);
        a80 = (a80 + a81);
        a81 = (a43 * a09);
        a80 = (a80 + a81);
        a80 = (a44 - a80);
        a80 = (a80 / a00);
        a00 = (-a80);
        output_vec[8] = a00;
        output_vec[9] = a46;
        a46 = (1. / a01);
        a45 = (a37 * a45);
        a46 = (a46 + a45);
        output_vec[10] = a46;
        a46 = (a37 * a47);
        a45 = (a30 / a01);
        a46 = (a46 - a45);
        output_vec[11] = a46;
        a45 = (a37 * a50);
        a49 = (a49 / a01);
        a45 = (a45 - a49);
        output_vec[12] = a45;
        a49 = (a37 * a54);
        a53 = (a53 / a01);
        a49 = (a49 - a53);
        output_vec[13] = a49;
        a53 = (a37 * a59);
        a58 = (a58 / a01);
        a53 = (a53 - a58);
        output_vec[14] = a53;
        a58 = (a37 * a65);
        a64 = (a64 / a01);
        a58 = (a58 - a64);
        output_vec[15] = a58;
        a64 = (a37 * a72);
        a71 = (a71 / a01);
        a64 = (a64 - a71);
        output_vec[16] = a64;
        a37 = (a37 * a80);
        a79 = (a79 / a01);
        a37 = (a37 - a79);
        output_vec[17] = a37;
        output_vec[18] = a48;
        output_vec[19] = a46;
        a48 = (1. / a02);
        a46 = (a30 * a46);
        a47 = (a38 * a47);
        a46 = (a46 - a47);
        a48 = (a48 - a46);
        output_vec[20] = a48;
        a48 = (a24 / a02);
        a46 = (a30 * a45);
        a47 = (a38 * a50);
        a46 = (a46 - a47);
        a48 = (a48 + a46);
        a46 = (-a48);
        output_vec[21] = a46;
        a52 = (a52 / a02);
        a47 = (a30 * a49);
        a79 = (a38 * a54);
        a47 = (a47 - a79);
        a52 = (a52 + a47);
        a47 = (-a52);
        output_vec[22] = a47;
        a57 = (a57 / a02);
        a79 = (a30 * a53);
        a01 = (a38 * a59);
        a79 = (a79 - a01);
        a57 = (a57 + a79);
        a79 = (-a57);
        output_vec[23] = a79;
        a63 = (a63 / a02);
        a01 = (a30 * a58);
        a71 = (a38 * a65);
        a01 = (a01 - a71);
        a63 = (a63 + a01);
        a01 = (-a63);
        output_vec[24] = a01;
        a70 = (a70 / a02);
        a71 = (a30 * a64);
        a81 = (a38 * a72);
        a71 = (a71 - a81);
        a70 = (a70 + a71);
        a71 = (-a70);
        output_vec[25] = a71;
        a78 = (a78 / a02);
        a30 = (a30 * a37);
        a38 = (a38 * a80);
        a30 = (a30 - a38);
        a78 = (a78 + a30);
        a30 = (-a78);
        output_vec[26] = a30;
        output_vec[27] = a51;
        output_vec[28] = a45;
        output_vec[29] = a46;
        a46 = (1. / a03);
        a45 = (a31 * a45);
        a50 = (a39 * a50);
        a45 = (a45 - a50);
        a48 = (a24 * a48);
        a45 = (a45 - a48);
        a46 = (a46 - a45);
        output_vec[30] = a46;
        a46 = (a19 / a03);
        a45 = (a31 * a49);
        a48 = (a39 * a54);
        a45 = (a45 - a48);
        a48 = (a24 * a52);
        a45 = (a45 - a48);
        a46 = (a46 + a45);
        a45 = (-a46);
        output_vec[31] = a45;
        a56 = (a56 / a03);
        a48 = (a31 * a53);
        a50 = (a39 * a59);
        a48 = (a48 - a50);
        a50 = (a24 * a57);
        a48 = (a48 - a50);
        a56 = (a56 + a48);
        a48 = (-a56);
        output_vec[32] = a48;
        a62 = (a62 / a03);
        a50 = (a31 * a58);
        a51 = (a39 * a65);
        a50 = (a50 - a51);
        a51 = (a24 * a63);
        a50 = (a50 - a51);
        a62 = (a62 + a50);
        a50 = (-a62);
        output_vec[33] = a50;
        a69 = (a69 / a03);
        a51 = (a31 * a64);
        a38 = (a39 * a72);
        a51 = (a51 - a38);
        a38 = (a24 * a70);
        a51 = (a51 - a38);
        a69 = (a69 + a51);
        a51 = (-a69);
        output_vec[34] = a51;
        a77 = (a77 / a03);
        a31 = (a31 * a37);
        a39 = (a39 * a80);
        a31 = (a31 - a39);
        a24 = (a24 * a78);
        a31 = (a31 - a24);
        a77 = (a77 + a31);
        a31 = (-a77);
        output_vec[35] = a31;
        output_vec[36] = a55;
        output_vec[37] = a49;
        output_vec[38] = a47;
        output_vec[39] = a45;
        a45 = (1. / a04);
        a49 = (a32 * a49);
        a54 = (a40 * a54);
        a49 = (a49 - a54);
        a52 = (a25 * a52);
        a49 = (a49 - a52);
        a46 = (a19 * a46);
        a49 = (a49 - a46);
        a45 = (a45 - a49);
        output_vec[40] = a45;
        a45 = (a15 / a04);
        a49 = (a32 * a53);
        a46 = (a40 * a59);
        a49 = (a49 - a46);
        a46 = (a25 * a57);
        a49 = (a49 - a46);
        a46 = (a19 * a56);
        a49 = (a49 - a46);
        a45 = (a45 + a49);
        a49 = (-a45);
        output_vec[41] = a49;
        a61 = (a61 / a04);
        a46 = (a32 * a58);
        a52 = (a40 * a65);
        a46 = (a46 - a52);
        a52 = (a25 * a63);
        a46 = (a46 - a52);
        a52 = (a19 * a62);
        a46 = (a46 - a52);
        a61 = (a61 + a46);
        a46 = (-a61);
        output_vec[42] = a46;
        a68 = (a68 / a04);
        a52 = (a32 * a64);
        a54 = (a40 * a72);
        a52 = (a52 - a54);
        a54 = (a25 * a70);
        a52 = (a52 - a54);
        a54 = (a19 * a69);
        a52 = (a52 - a54);
        a68 = (a68 + a52);
        a52 = (-a68);
        output_vec[43] = a52;
        a76 = (a76 / a04);
        a32 = (a32 * a37);
        a40 = (a40 * a80);
        a32 = (a32 - a40);
        a25 = (a25 * a78);
        a32 = (a32 - a25);
        a19 = (a19 * a77);
        a32 = (a32 - a19);
        a76 = (a76 + a32);
        a32 = (-a76);
        output_vec[44] = a32;
        output_vec[45] = a60;
        output_vec[46] = a53;
        output_vec[47] = a79;
        output_vec[48] = a48;
        output_vec[49] = a49;
        a49 = (1. / a05);
        a53 = (a33 * a53);
        a59 = (a41 * a59);
        a53 = (a53 - a59);
        a57 = (a26 * a57);
        a53 = (a53 - a57);
        a56 = (a20 * a56);
        a53 = (a53 - a56);
        a45 = (a15 * a45);
        a53 = (a53 - a45);
        a49 = (a49 - a53);
        output_vec[50] = a49;
        a49 = (a12 / a05);
        a53 = (a33 * a58);
        a45 = (a41 * a65);
        a53 = (a53 - a45);
        a45 = (a26 * a63);
        a53 = (a53 - a45);
        a45 = (a20 * a62);
        a53 = (a53 - a45);
        a45 = (a15 * a61);
        a53 = (a53 - a45);
        a49 = (a49 + a53);
        a53 = (-a49);
        output_vec[51] = a53;
        a67 = (a67 / a05);
        a45 = (a33 * a64);
        a56 = (a41 * a72);
        a45 = (a45 - a56);
        a56 = (a26 * a70);
        a45 = (a45 - a56);
        a56 = (a20 * a69);
        a45 = (a45 - a56);
        a56 = (a15 * a68);
        a45 = (a45 - a56);
        a67 = (a67 + a45);
        a45 = (-a67);
        output_vec[52] = a45;
        a75 = (a75 / a05);
        a33 = (a33 * a37);
        a41 = (a41 * a80);
        a33 = (a33 - a41);
        a26 = (a26 * a78);
        a33 = (a33 - a26);
        a20 = (a20 * a77);
        a33 = (a33 - a20);
        a15 = (a15 * a76);
        a33 = (a33 - a15);
        a75 = (a75 + a33);
        a33 = (-a75);
        output_vec[53] = a33;
        output_vec[54] = a66;
        output_vec[55] = a58;
        output_vec[56] = a01;
        output_vec[57] = a50;
        output_vec[58] = a46;
        output_vec[59] = a53;
        a53 = (1. / a06);
        a58 = (a34 * a58);
        a65 = (a42 * a65);
        a58 = (a58 - a65);
        a63 = (a27 * a63);
        a58 = (a58 - a63);
        a62 = (a21 * a62);
        a58 = (a58 - a62);
        a61 = (a16 * a61);
        a58 = (a58 - a61);
        a49 = (a12 * a49);
        a58 = (a58 - a49);
        a53 = (a53 - a58);
        output_vec[60] = a53;
        a53 = (a10 / a06);
        a58 = (a34 * a64);
        a49 = (a42 * a72);
        a58 = (a58 - a49);
        a49 = (a27 * a70);
        a58 = (a58 - a49);
        a49 = (a21 * a69);
        a58 = (a58 - a49);
        a49 = (a16 * a68);
        a58 = (a58 - a49);
        a49 = (a12 * a67);
        a58 = (a58 - a49);
        a53 = (a53 + a58);
        a58 = (-a53);
        output_vec[61] = a58;
        a74 = (a74 / a06);
        a34 = (a34 * a37);
        a42 = (a42 * a80);
        a34 = (a34 - a42);
        a27 = (a27 * a78);
        a34 = (a34 - a27);
        a21 = (a21 * a77);
        a34 = (a34 - a21);
        a16 = (a16 * a76);
        a34 = (a34 - a16);
        a12 = (a12 * a75);
        a34 = (a34 - a12);
        a74 = (a74 + a34);
        a34 = (-a74);
        output_vec[62] = a34;
        output_vec[63] = a73;
        output_vec[64] = a64;
        output_vec[65] = a71;
        output_vec[66] = a51;
        output_vec[67] = a52;
        output_vec[68] = a45;
        output_vec[69] = a58;
        a58 = (1. / a07);
        a64 = (a35 * a64);
        a72 = (a43 * a72);
        a64 = (a64 - a72);
        a70 = (a28 * a70);
        a64 = (a64 - a70);
        a69 = (a22 * a69);
        a64 = (a64 - a69);
        a68 = (a17 * a68);
        a64 = (a64 - a68);
        a67 = (a13 * a67);
        a64 = (a64 - a67);
        a53 = (a10 * a53);
        a64 = (a64 - a53);
        a58 = (a58 - a64);
        output_vec[70] = a58;
        a07 = (a09 / a07);
        a35 = (a35 * a37);
        a43 = (a43 * a80);
        a35 = (a35 - a43);
        a28 = (a28 * a78);
        a35 = (a35 - a28);
        a22 = (a22 * a77);
        a35 = (a35 - a22);
        a17 = (a17 * a76);
        a35 = (a35 - a17);
        a13 = (a13 * a75);
        a35 = (a35 - a13);
        a10 = (a10 * a74);
        a35 = (a35 - a10);
        a07 = (a07 + a35);
        a35 = (-a07);
        output_vec[71] = a35;
        output_vec[72] = a00;
        output_vec[73] = a37;
        output_vec[74] = a30;
        output_vec[75] = a31;
        output_vec[76] = a32;
        output_vec[77] = a33;
        output_vec[78] = a34;
        output_vec[79] = a35;
        a08 = (1. / a08);
        a36 = (a36 * a37);
        a44 = (a44 * a80);
        a36 = (a36 - a44);
        a29 = (a29 * a78);
        a36 = (a36 - a29);
        a23 = (a23 * a77);
        a36 = (a36 - a23);
        a18 = (a18 * a76);
        a36 = (a36 - a18);
        a14 = (a14 * a75);
        a36 = (a36 - a14);
        a11 = (a11 * a74);
        a36 = (a36 - a11);
        a09 = (a09 * a07);
        a36 = (a36 - a09);
        a08 = (a08 - a36);
        output_vec[80] = a08;
      }
    };
  } // namespace internal
} // namespace pinocchio

#endif // ifndef __pinocchio_math_details_matrix_inversion_9x9_hpp__
