//
// Copyright (c) 2025 INRIA
//

#ifndef __pinocchio_math_details_matrix_inversion_8x8_hpp__
#define __pinocchio_math_details_matrix_inversion_8x8_hpp__

#include "pinocchio/math/matrix.hpp"

namespace pinocchio
{
  namespace internal
  {
    template<>
    struct MatrixInversionCodeGeneratedImpl<8>
    {
      template<typename M1, typename M2>
      static void
      run(const Eigen::MatrixBase<M1> & matrix, const Eigen::MatrixBase<M2> & matrix_inverse_)
      {
        typedef typename M1::Scalar Scalar;

        assert(is_symmetric(matrix));

        const auto & input_vec = matrix.reshaped();
        auto & matrix_inverse = matrix_inverse_.const_cast_derived();
        auto output_vec = matrix_inverse.reshaped();

        Scalar a00, a01, a02, a03, a04, a05, a06, a07, a08, a09, a10, a11;
        Scalar a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23;
        Scalar a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35;
        Scalar a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47;
        Scalar a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59;
        Scalar a60, a61, a62, a63, a64;
        a00 = input_vec[0];
        a01 = input_vec[9];
        a02 = input_vec[18];
        a03 = input_vec[27];
        a04 = input_vec[36];
        a05 = input_vec[45];
        a06 = input_vec[54];
        a07 = input_vec[63];
        a08 = input_vec[62];
        a08 = (a08 / a07);
        a09 = math::square(a08);
        a09 = (a07 * a09);
        a06 = (a06 - a09);
        a09 = input_vec[53];
        a10 = input_vec[61];
        a11 = (a10 * a08);
        a09 = (a09 - a11);
        a09 = (a09 / a06);
        a11 = math::square(a09);
        a11 = (a06 * a11);
        a10 = (a10 / a07);
        a12 = math::square(a10);
        a12 = (a07 * a12);
        a11 = (a11 + a12);
        a05 = (a05 - a11);
        a11 = input_vec[44];
        a12 = input_vec[52];
        a13 = input_vec[60];
        a14 = (a13 * a08);
        a12 = (a12 - a14);
        a14 = (a12 * a09);
        a15 = (a13 * a10);
        a14 = (a14 + a15);
        a11 = (a11 - a14);
        a11 = (a11 / a05);
        a14 = math::square(a11);
        a14 = (a05 * a14);
        a12 = (a12 / a06);
        a15 = math::square(a12);
        a15 = (a06 * a15);
        a14 = (a14 + a15);
        a13 = (a13 / a07);
        a15 = math::square(a13);
        a15 = (a07 * a15);
        a14 = (a14 + a15);
        a04 = (a04 - a14);
        a14 = input_vec[35];
        a15 = input_vec[43];
        a16 = input_vec[51];
        a17 = input_vec[59];
        a18 = (a17 * a08);
        a16 = (a16 - a18);
        a18 = (a16 * a09);
        a19 = (a17 * a10);
        a18 = (a18 + a19);
        a15 = (a15 - a18);
        a18 = (a15 * a11);
        a19 = (a16 * a12);
        a18 = (a18 + a19);
        a19 = (a17 * a13);
        a18 = (a18 + a19);
        a14 = (a14 - a18);
        a14 = (a14 / a04);
        a18 = math::square(a14);
        a18 = (a04 * a18);
        a15 = (a15 / a05);
        a19 = math::square(a15);
        a19 = (a05 * a19);
        a18 = (a18 + a19);
        a16 = (a16 / a06);
        a19 = math::square(a16);
        a19 = (a06 * a19);
        a18 = (a18 + a19);
        a17 = (a17 / a07);
        a19 = math::square(a17);
        a19 = (a07 * a19);
        a18 = (a18 + a19);
        a03 = (a03 - a18);
        a18 = input_vec[26];
        a19 = input_vec[34];
        a20 = input_vec[42];
        a21 = input_vec[50];
        a22 = input_vec[58];
        a23 = (a22 * a08);
        a21 = (a21 - a23);
        a23 = (a21 * a09);
        a24 = (a22 * a10);
        a23 = (a23 + a24);
        a20 = (a20 - a23);
        a23 = (a20 * a11);
        a24 = (a21 * a12);
        a23 = (a23 + a24);
        a24 = (a22 * a13);
        a23 = (a23 + a24);
        a19 = (a19 - a23);
        a23 = (a19 * a14);
        a24 = (a20 * a15);
        a23 = (a23 + a24);
        a24 = (a21 * a16);
        a23 = (a23 + a24);
        a24 = (a22 * a17);
        a23 = (a23 + a24);
        a18 = (a18 - a23);
        a18 = (a18 / a03);
        a23 = math::square(a18);
        a23 = (a03 * a23);
        a19 = (a19 / a04);
        a24 = math::square(a19);
        a24 = (a04 * a24);
        a23 = (a23 + a24);
        a20 = (a20 / a05);
        a24 = math::square(a20);
        a24 = (a05 * a24);
        a23 = (a23 + a24);
        a21 = (a21 / a06);
        a24 = math::square(a21);
        a24 = (a06 * a24);
        a23 = (a23 + a24);
        a22 = (a22 / a07);
        a24 = math::square(a22);
        a24 = (a07 * a24);
        a23 = (a23 + a24);
        a02 = (a02 - a23);
        a23 = input_vec[17];
        a24 = input_vec[25];
        a25 = input_vec[33];
        a26 = input_vec[41];
        a27 = input_vec[49];
        a28 = input_vec[57];
        a29 = (a28 * a08);
        a27 = (a27 - a29);
        a29 = (a27 * a09);
        a30 = (a28 * a10);
        a29 = (a29 + a30);
        a26 = (a26 - a29);
        a29 = (a26 * a11);
        a30 = (a27 * a12);
        a29 = (a29 + a30);
        a30 = (a28 * a13);
        a29 = (a29 + a30);
        a25 = (a25 - a29);
        a29 = (a25 * a14);
        a30 = (a26 * a15);
        a29 = (a29 + a30);
        a30 = (a27 * a16);
        a29 = (a29 + a30);
        a30 = (a28 * a17);
        a29 = (a29 + a30);
        a24 = (a24 - a29);
        a29 = (a24 * a18);
        a30 = (a25 * a19);
        a29 = (a29 + a30);
        a30 = (a26 * a20);
        a29 = (a29 + a30);
        a30 = (a27 * a21);
        a29 = (a29 + a30);
        a30 = (a28 * a22);
        a29 = (a29 + a30);
        a23 = (a23 - a29);
        a23 = (a23 / a02);
        a29 = math::square(a23);
        a29 = (a02 * a29);
        a24 = (a24 / a03);
        a30 = math::square(a24);
        a30 = (a03 * a30);
        a29 = (a29 + a30);
        a25 = (a25 / a04);
        a30 = math::square(a25);
        a30 = (a04 * a30);
        a29 = (a29 + a30);
        a26 = (a26 / a05);
        a30 = math::square(a26);
        a30 = (a05 * a30);
        a29 = (a29 + a30);
        a27 = (a27 / a06);
        a30 = math::square(a27);
        a30 = (a06 * a30);
        a29 = (a29 + a30);
        a28 = (a28 / a07);
        a30 = math::square(a28);
        a30 = (a07 * a30);
        a29 = (a29 + a30);
        a01 = (a01 - a29);
        a29 = input_vec[8];
        a30 = input_vec[16];
        a31 = input_vec[24];
        a32 = input_vec[32];
        a33 = input_vec[40];
        a34 = input_vec[48];
        a35 = input_vec[56];
        a36 = (a35 * a08);
        a34 = (a34 - a36);
        a36 = (a34 * a09);
        a37 = (a35 * a10);
        a36 = (a36 + a37);
        a33 = (a33 - a36);
        a36 = (a33 * a11);
        a37 = (a34 * a12);
        a36 = (a36 + a37);
        a37 = (a35 * a13);
        a36 = (a36 + a37);
        a32 = (a32 - a36);
        a36 = (a32 * a14);
        a37 = (a33 * a15);
        a36 = (a36 + a37);
        a37 = (a34 * a16);
        a36 = (a36 + a37);
        a37 = (a35 * a17);
        a36 = (a36 + a37);
        a31 = (a31 - a36);
        a36 = (a31 * a18);
        a37 = (a32 * a19);
        a36 = (a36 + a37);
        a37 = (a33 * a20);
        a36 = (a36 + a37);
        a37 = (a34 * a21);
        a36 = (a36 + a37);
        a37 = (a35 * a22);
        a36 = (a36 + a37);
        a30 = (a30 - a36);
        a36 = (a30 * a23);
        a37 = (a31 * a24);
        a36 = (a36 + a37);
        a37 = (a32 * a25);
        a36 = (a36 + a37);
        a37 = (a33 * a26);
        a36 = (a36 + a37);
        a37 = (a34 * a27);
        a36 = (a36 + a37);
        a37 = (a35 * a28);
        a36 = (a36 + a37);
        a29 = (a29 - a36);
        a29 = (a29 / a01);
        a36 = math::square(a29);
        a36 = (a01 * a36);
        a30 = (a30 / a02);
        a37 = math::square(a30);
        a37 = (a02 * a37);
        a36 = (a36 + a37);
        a31 = (a31 / a03);
        a37 = math::square(a31);
        a37 = (a03 * a37);
        a36 = (a36 + a37);
        a32 = (a32 / a04);
        a37 = math::square(a32);
        a37 = (a04 * a37);
        a36 = (a36 + a37);
        a33 = (a33 / a05);
        a37 = math::square(a33);
        a37 = (a05 * a37);
        a36 = (a36 + a37);
        a34 = (a34 / a06);
        a37 = math::square(a34);
        a37 = (a06 * a37);
        a36 = (a36 + a37);
        a35 = (a35 / a07);
        a37 = math::square(a35);
        a37 = (a07 * a37);
        a36 = (a36 + a37);
        a00 = (a00 - a36);
        a36 = (1. / a00);
        output_vec[0] = a36;
        a36 = (a29 / a00);
        a37 = (-a36);
        output_vec[1] = a37;
        a38 = (a29 * a23);
        a38 = (a30 - a38);
        a38 = (a38 / a00);
        a39 = (-a38);
        output_vec[2] = a39;
        a40 = (a23 * a18);
        a40 = (a24 - a40);
        a41 = (a29 * a40);
        a42 = (a30 * a18);
        a41 = (a41 + a42);
        a41 = (a31 - a41);
        a41 = (a41 / a00);
        a42 = (-a41);
        output_vec[3] = a42;
        a43 = (a18 * a14);
        a43 = (a19 - a43);
        a44 = (a23 * a43);
        a45 = (a24 * a14);
        a44 = (a44 + a45);
        a44 = (a25 - a44);
        a45 = (a29 * a44);
        a46 = (a30 * a43);
        a45 = (a45 + a46);
        a46 = (a31 * a14);
        a45 = (a45 + a46);
        a45 = (a32 - a45);
        a45 = (a45 / a00);
        a46 = (-a45);
        output_vec[4] = a46;
        a47 = (a14 * a11);
        a47 = (a15 - a47);
        a48 = (a18 * a47);
        a49 = (a19 * a11);
        a48 = (a48 + a49);
        a48 = (a20 - a48);
        a49 = (a23 * a48);
        a50 = (a24 * a47);
        a49 = (a49 + a50);
        a50 = (a25 * a11);
        a49 = (a49 + a50);
        a49 = (a26 - a49);
        a50 = (a29 * a49);
        a51 = (a30 * a48);
        a50 = (a50 + a51);
        a51 = (a31 * a47);
        a50 = (a50 + a51);
        a51 = (a32 * a11);
        a50 = (a50 + a51);
        a50 = (a33 - a50);
        a50 = (a50 / a00);
        a51 = (-a50);
        output_vec[5] = a51;
        a52 = (a11 * a09);
        a52 = (a12 - a52);
        a53 = (a14 * a52);
        a54 = (a15 * a09);
        a53 = (a53 + a54);
        a53 = (a16 - a53);
        a54 = (a18 * a53);
        a55 = (a19 * a52);
        a54 = (a54 + a55);
        a55 = (a20 * a09);
        a54 = (a54 + a55);
        a54 = (a21 - a54);
        a55 = (a23 * a54);
        a56 = (a24 * a53);
        a55 = (a55 + a56);
        a56 = (a25 * a52);
        a55 = (a55 + a56);
        a56 = (a26 * a09);
        a55 = (a55 + a56);
        a55 = (a27 - a55);
        a56 = (a29 * a55);
        a57 = (a30 * a54);
        a56 = (a56 + a57);
        a57 = (a31 * a53);
        a56 = (a56 + a57);
        a57 = (a32 * a52);
        a56 = (a56 + a57);
        a57 = (a33 * a09);
        a56 = (a56 + a57);
        a56 = (a34 - a56);
        a56 = (a56 / a00);
        a57 = (-a56);
        output_vec[6] = a57;
        a58 = (a09 * a08);
        a58 = (a10 - a58);
        a59 = (a11 * a58);
        a60 = (a12 * a08);
        a59 = (a59 + a60);
        a59 = (a13 - a59);
        a60 = (a14 * a59);
        a61 = (a15 * a58);
        a60 = (a60 + a61);
        a61 = (a16 * a08);
        a60 = (a60 + a61);
        a60 = (a17 - a60);
        a61 = (a18 * a60);
        a62 = (a19 * a59);
        a61 = (a61 + a62);
        a62 = (a20 * a58);
        a61 = (a61 + a62);
        a62 = (a21 * a08);
        a61 = (a61 + a62);
        a61 = (a22 - a61);
        a62 = (a23 * a61);
        a63 = (a24 * a60);
        a62 = (a62 + a63);
        a63 = (a25 * a59);
        a62 = (a62 + a63);
        a63 = (a26 * a58);
        a62 = (a62 + a63);
        a63 = (a27 * a08);
        a62 = (a62 + a63);
        a62 = (a28 - a62);
        a63 = (a29 * a62);
        a64 = (a30 * a61);
        a63 = (a63 + a64);
        a64 = (a31 * a60);
        a63 = (a63 + a64);
        a64 = (a32 * a59);
        a63 = (a63 + a64);
        a64 = (a33 * a58);
        a63 = (a63 + a64);
        a64 = (a34 * a08);
        a63 = (a63 + a64);
        a63 = (a35 - a63);
        a63 = (a63 / a00);
        a00 = (-a63);
        output_vec[7] = a00;
        output_vec[8] = a37;
        a37 = (1. / a01);
        a36 = (a29 * a36);
        a37 = (a37 + a36);
        output_vec[9] = a37;
        a37 = (a29 * a38);
        a36 = (a23 / a01);
        a37 = (a37 - a36);
        output_vec[10] = a37;
        a36 = (a29 * a41);
        a40 = (a40 / a01);
        a36 = (a36 - a40);
        output_vec[11] = a36;
        a40 = (a29 * a45);
        a44 = (a44 / a01);
        a40 = (a40 - a44);
        output_vec[12] = a40;
        a44 = (a29 * a50);
        a49 = (a49 / a01);
        a44 = (a44 - a49);
        output_vec[13] = a44;
        a49 = (a29 * a56);
        a55 = (a55 / a01);
        a49 = (a49 - a55);
        output_vec[14] = a49;
        a29 = (a29 * a63);
        a62 = (a62 / a01);
        a29 = (a29 - a62);
        output_vec[15] = a29;
        output_vec[16] = a39;
        output_vec[17] = a37;
        a39 = (1. / a02);
        a37 = (a23 * a37);
        a38 = (a30 * a38);
        a37 = (a37 - a38);
        a39 = (a39 - a37);
        output_vec[18] = a39;
        a39 = (a18 / a02);
        a37 = (a23 * a36);
        a38 = (a30 * a41);
        a37 = (a37 - a38);
        a39 = (a39 + a37);
        a37 = (-a39);
        output_vec[19] = a37;
        a43 = (a43 / a02);
        a38 = (a23 * a40);
        a62 = (a30 * a45);
        a38 = (a38 - a62);
        a43 = (a43 + a38);
        a38 = (-a43);
        output_vec[20] = a38;
        a48 = (a48 / a02);
        a62 = (a23 * a44);
        a01 = (a30 * a50);
        a62 = (a62 - a01);
        a48 = (a48 + a62);
        a62 = (-a48);
        output_vec[21] = a62;
        a54 = (a54 / a02);
        a01 = (a23 * a49);
        a55 = (a30 * a56);
        a01 = (a01 - a55);
        a54 = (a54 + a01);
        a01 = (-a54);
        output_vec[22] = a01;
        a61 = (a61 / a02);
        a23 = (a23 * a29);
        a30 = (a30 * a63);
        a23 = (a23 - a30);
        a61 = (a61 + a23);
        a23 = (-a61);
        output_vec[23] = a23;
        output_vec[24] = a42;
        output_vec[25] = a36;
        output_vec[26] = a37;
        a37 = (1. / a03);
        a36 = (a24 * a36);
        a41 = (a31 * a41);
        a36 = (a36 - a41);
        a39 = (a18 * a39);
        a36 = (a36 - a39);
        a37 = (a37 - a36);
        output_vec[27] = a37;
        a37 = (a14 / a03);
        a36 = (a24 * a40);
        a39 = (a31 * a45);
        a36 = (a36 - a39);
        a39 = (a18 * a43);
        a36 = (a36 - a39);
        a37 = (a37 + a36);
        a36 = (-a37);
        output_vec[28] = a36;
        a47 = (a47 / a03);
        a39 = (a24 * a44);
        a41 = (a31 * a50);
        a39 = (a39 - a41);
        a41 = (a18 * a48);
        a39 = (a39 - a41);
        a47 = (a47 + a39);
        a39 = (-a47);
        output_vec[29] = a39;
        a53 = (a53 / a03);
        a41 = (a24 * a49);
        a42 = (a31 * a56);
        a41 = (a41 - a42);
        a42 = (a18 * a54);
        a41 = (a41 - a42);
        a53 = (a53 + a41);
        a41 = (-a53);
        output_vec[30] = a41;
        a60 = (a60 / a03);
        a24 = (a24 * a29);
        a31 = (a31 * a63);
        a24 = (a24 - a31);
        a18 = (a18 * a61);
        a24 = (a24 - a18);
        a60 = (a60 + a24);
        a24 = (-a60);
        output_vec[31] = a24;
        output_vec[32] = a46;
        output_vec[33] = a40;
        output_vec[34] = a38;
        output_vec[35] = a36;
        a36 = (1. / a04);
        a40 = (a25 * a40);
        a45 = (a32 * a45);
        a40 = (a40 - a45);
        a43 = (a19 * a43);
        a40 = (a40 - a43);
        a37 = (a14 * a37);
        a40 = (a40 - a37);
        a36 = (a36 - a40);
        output_vec[36] = a36;
        a36 = (a11 / a04);
        a40 = (a25 * a44);
        a37 = (a32 * a50);
        a40 = (a40 - a37);
        a37 = (a19 * a48);
        a40 = (a40 - a37);
        a37 = (a14 * a47);
        a40 = (a40 - a37);
        a36 = (a36 + a40);
        a40 = (-a36);
        output_vec[37] = a40;
        a52 = (a52 / a04);
        a37 = (a25 * a49);
        a43 = (a32 * a56);
        a37 = (a37 - a43);
        a43 = (a19 * a54);
        a37 = (a37 - a43);
        a43 = (a14 * a53);
        a37 = (a37 - a43);
        a52 = (a52 + a37);
        a37 = (-a52);
        output_vec[38] = a37;
        a59 = (a59 / a04);
        a25 = (a25 * a29);
        a32 = (a32 * a63);
        a25 = (a25 - a32);
        a19 = (a19 * a61);
        a25 = (a25 - a19);
        a14 = (a14 * a60);
        a25 = (a25 - a14);
        a59 = (a59 + a25);
        a25 = (-a59);
        output_vec[39] = a25;
        output_vec[40] = a51;
        output_vec[41] = a44;
        output_vec[42] = a62;
        output_vec[43] = a39;
        output_vec[44] = a40;
        a40 = (1. / a05);
        a44 = (a26 * a44);
        a50 = (a33 * a50);
        a44 = (a44 - a50);
        a48 = (a20 * a48);
        a44 = (a44 - a48);
        a47 = (a15 * a47);
        a44 = (a44 - a47);
        a36 = (a11 * a36);
        a44 = (a44 - a36);
        a40 = (a40 - a44);
        output_vec[45] = a40;
        a40 = (a09 / a05);
        a44 = (a26 * a49);
        a36 = (a33 * a56);
        a44 = (a44 - a36);
        a36 = (a20 * a54);
        a44 = (a44 - a36);
        a36 = (a15 * a53);
        a44 = (a44 - a36);
        a36 = (a11 * a52);
        a44 = (a44 - a36);
        a40 = (a40 + a44);
        a44 = (-a40);
        output_vec[46] = a44;
        a58 = (a58 / a05);
        a26 = (a26 * a29);
        a33 = (a33 * a63);
        a26 = (a26 - a33);
        a20 = (a20 * a61);
        a26 = (a26 - a20);
        a15 = (a15 * a60);
        a26 = (a26 - a15);
        a11 = (a11 * a59);
        a26 = (a26 - a11);
        a58 = (a58 + a26);
        a26 = (-a58);
        output_vec[47] = a26;
        output_vec[48] = a57;
        output_vec[49] = a49;
        output_vec[50] = a01;
        output_vec[51] = a41;
        output_vec[52] = a37;
        output_vec[53] = a44;
        a44 = (1. / a06);
        a49 = (a27 * a49);
        a56 = (a34 * a56);
        a49 = (a49 - a56);
        a54 = (a21 * a54);
        a49 = (a49 - a54);
        a53 = (a16 * a53);
        a49 = (a49 - a53);
        a52 = (a12 * a52);
        a49 = (a49 - a52);
        a40 = (a09 * a40);
        a49 = (a49 - a40);
        a44 = (a44 - a49);
        output_vec[54] = a44;
        a06 = (a08 / a06);
        a27 = (a27 * a29);
        a34 = (a34 * a63);
        a27 = (a27 - a34);
        a21 = (a21 * a61);
        a27 = (a27 - a21);
        a16 = (a16 * a60);
        a27 = (a27 - a16);
        a12 = (a12 * a59);
        a27 = (a27 - a12);
        a09 = (a09 * a58);
        a27 = (a27 - a09);
        a06 = (a06 + a27);
        a27 = (-a06);
        output_vec[55] = a27;
        output_vec[56] = a00;
        output_vec[57] = a29;
        output_vec[58] = a23;
        output_vec[59] = a24;
        output_vec[60] = a25;
        output_vec[61] = a26;
        output_vec[62] = a27;
        a07 = (1. / a07);
        a28 = (a28 * a29);
        a35 = (a35 * a63);
        a28 = (a28 - a35);
        a22 = (a22 * a61);
        a28 = (a28 - a22);
        a17 = (a17 * a60);
        a28 = (a28 - a17);
        a13 = (a13 * a59);
        a28 = (a28 - a13);
        a10 = (a10 * a58);
        a28 = (a28 - a10);
        a08 = (a08 * a06);
        a28 = (a28 - a08);
        a07 = (a07 - a28);
        output_vec[63] = a07;
      }
    };
  } // namespace internal
} // namespace pinocchio

#endif // ifndef __pinocchio_math_details_matrix_inversion_8x8_hpp__
